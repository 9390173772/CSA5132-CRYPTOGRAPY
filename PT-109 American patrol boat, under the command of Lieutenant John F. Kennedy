#include <stdio.h>
#include <string.h>
#include <ctype.h>
#define SIZE 5
void findRowColumn(char keyMatrix[][SIZE], char ch, int *row, int *col) {
    if (ch == 'J')
        ch = 'I';
    for (int i = 0; i < SIZE; ++i) {
        for (int j = 0; j < SIZE; ++j) {
            if (keyMatrix[i][j] == ch) {
                *row = i;
                *col = j;
                return;
            }
        }
    }
}
void decryptPlayfair(char message[], char key[]) {
    char keyMatrix[SIZE][SIZE];
    int row1, col1, row2, col2;
    int k = 0;
    for (int i = 0; i < SIZE; ++i) {
        for (int j = 0; j < SIZE; ++j) {
            if (k < strlen(key)) {
                keyMatrix[i][j] = key[k++];
            } else {
                while (strchr(key, 'A' + k) != NULL) {
                    ++k;
                }
                keyMatrix[i][j] = 'A' + k++;
            }
        }
    }
    for (int i = 0; message[i] != '\0'; i += 2) {
        char first = message[i];
        char second = (message[i + 1] == '\0') ? 'X' : message[i + 1];
        findRowColumn(keyMatrix, first, &row1, &col1);
        findRowColumn(keyMatrix, second, &row2, &col2);
        if (row1 == row2) {
            printf("%c%c", keyMatrix[row1][(col1 - 1 + SIZE) % SIZE], keyMatrix[row2][(col2 - 1 + SIZE) % SIZE]);
        }
        else if (col1 == col2) {
            printf("%c%c", keyMatrix[(row1 - 1 + SIZE) % SIZE][col1], keyMatrix[(row2 - 1 + SIZE) % SIZE][col2]);
        }
        else {
            printf("%c%c", keyMatrix[row1][col2], keyMatrix[row2][col1]);
        }
    }
    printf("\n");
}
int main() {
    char message[] = "KXJEYUREBEZWEHEWRYTUHEYFSKREHEGOYFIWTTTUOLKSYCAJPOBOTEIZONTXBYBNTGONEYCUZWRGDSONSXBOUYWRHEBAAHYUSEDQ";
    char key[] = "PT109";
    decryptPlayfair(message, key);
    return 0;
}
