#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define ALPHABET_SIZE 26
void countFrequency(char ciphertext[], int frequency[]) {
    for (int i = 0; i < strlen(ciphertext); i++) {
        if (ciphertext[i] >= 'A' && ciphertext[i] <= 'Z') {
            frequency[ciphertext[i] - 'A']++;
        }
    }
}
char findMostFrequent(int frequency[]) {
    int maxFrequency = 0;
    char mostFrequentLetter;
    for (int i = 0; i < ALPHABET_SIZE; i++) {
        if (frequency[i] > maxFrequency) {
            maxFrequency = frequency[i];
            mostFrequentLetter = 'A' + i;
        }
    }
    return mostFrequentLetter;
}
void decryptSimpleSubstitution(char ciphertext[], char mostFrequentLetter) {
    int key = mostFrequentLetter - 'E';
    for (int i = 0; i < strlen(ciphertext); i++) {
        if (ciphertext[i] >= 'A' && ciphertext[i] <= 'Z') {
            char decryptedChar = 'A' + (ciphertext[i] - 'A' - key + ALPHABET_SIZE) % ALPHABET_SIZE;
            printf("%c", decryptedChar);
        } else {
            printf("%c", ciphertext[i]); 
        }
    }
}
int main() {
    char ciphertext[] = "53‡‡†305))6*;4826)4‡.)4‡);806*;48†8¶60))85;;]8*;:‡*8†83 (88)5*†;46(;88*96*?;8)‡(;485);5†2:‡(;4956*2(5—4)8¶8* ;4069285);)6†8)4‡‡;1(‡9;48081;8:8‡1;48†85;4)485†528806*81 (‡9;48;(88;4(‡?34;48)4‡;161;:188;‡?";
    int frequency[ALPHABET_SIZE] = {0};
    countFrequency(ciphertext, frequency);
    char mostFrequentLetter = findMostFrequent(frequency);
    decryptSimpleSubstitution(ciphertext, mostFrequentLetter);
    return 0;
}
